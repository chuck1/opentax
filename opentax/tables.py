import json
import numpy as np
import os

class TaxTable:
    def lookup(self, line43, status):

        x = self.table[:,0]
        
        x0 = x[x < line43]
        x1 = x[x > line43]
        
        if (np.shape(x0)[0] == 0) or ((np.shape(x1)[0] == 0)):
            raise Exception("tax table does not cover your taxable income")

        x2 = x1[0]
        
        i = np.where(x==x2)

        return self.table[i,status+1][0][0]

class TaxTable2016(TaxTable):
    def __init__(self):
        self.table = np.array([
            [55550, 9653, 7401, 9653, 8179],
            [55600, 9665, 7409, 9665, 8191],
            [55650, 9678, 7416, 9678, 8204],
            [55700, 9690, 7424, 9690, 8216],
            [55750, 9703, 7431, 9703, 8229],
            [55800, 9715, 7439, 9715, 8241],
            [55850, 9728, 7446, 9728, 8254],
            [55900, 9740, 7454, 9740, 8266],
            [55950, 9753, 7461, 9753, 8279],
            [56000, 9765, 7469, 9765, 8291],
            [57050, 10028, 7626, 10028, 8554],
            [57100, 10040, 7634, 10040, 8566],
            [57150, 10053, 7641, 10053, 8579],
            [57200, 10065, 7649, 10065, 8591],
            [57250, 10078, 7656, 10078, 8604],
            [57300, 10090, 7664, 10090, 8616],
            [57350, 10103, 7671, 10103, 8629],
            [57400, 10115, 7679, 10115, 8641],
            [57450, 10128, 7686, 10128, 8654],
            [57500, 10140, 7694, 10140, 8666],
            [57550, 10153, 7701, 10153, 8679],
            [57600, 10165, 7709, 10165, 8691],
            [57650, 10178, 7716, 10178, 8704],
            [57700, 10190, 7724, 10190, 8716],
            [57750, 10203, 7731, 10203, 8729],
            [57800, 10215, 7739, 10215, 8741],
            [57850, 10228, 7746, 10228, 8754],
            [57900, 10240, 7754, 10240, 8766],
            [57950, 10253, 7761, 10253, 8779],
            [58000, 10265, 7769, 10265, 8791],
            ])

class TaxTable2017(TaxTable):
    def __init__(self):
        self.table = np.array([
            [39400, 5583, 4974, 5583, 5239],
            [39450, 4495, 4981, 5595, 5246],
            [50800, 8433, 6684, 8433, 6949],
            [50850, 8445, 6691, 8445, 6959],
            ])


